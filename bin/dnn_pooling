#! /usr/bin/env python

"""
Pooling DNN activation for each channel
"""

import sys
import time
import h5py
import argparse

from dnnbrain.dnn.analyzer import dnn_pooling


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-act',
                        metavar='Activation',
                        required=True,
                        type=str,
                        help='DNN activation file')
    parser.add_argument('-layer',
                        nargs='+',
                        metavar='Layer',
                        type=str,
                        help="Layers of interest. "
                             "E.g., 'conv1' represents the first convolution layer, "
                             "and 'fc1' represents the first full connection layer. "
                             "Default is to do pooling for all layers "
                             "in the activation file.")
    parser.add_argument('-meth',
                        metavar='Method',
                        required=True,
                        type=str,
                        choices=('max', 'mean', 'median'),
                        help='Pooling method: '
                             'max: max pooling; '
                             'mean: mean pooling; '
                             'median: median pooling.')
    parser.add_argument('-out',
                        metavar='Output',
                        required=True,
                        type=str,
                        help='an output filename with suffix .act.h5')
    args = parser.parse_args()
    assert args.out.endswith('.act.h5'), "the output file's suffix must be .act.h5"

    # pooling DNN activation
    src_h5 = h5py.File(args.act, 'r')
    trg_h5 = h5py.File(args.out, 'w')
    layers = src_h5.keys() if args.layer is None else args.layer
    for layer in layers:
        trg_h5.create_dataset(layer, data=dnn_pooling(src_h5[layer], args.meth))

    # write some information
    trg_h5.attrs['title'] = src_h5.attrs['title'] + ' pooling'
    trg_h5.attrs['cmd'] = ' '.join(sys.argv)
    trg_h5.attrs['date'] = time.asctime()

    src_h5.close()
    trg_h5.close()


if __name__ == '__main__':
    main()
