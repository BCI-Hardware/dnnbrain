#! /usr/bin/env python

"""
Simplify a stimulus into a minimal part which could cause equivalent activation
as the raw stimlus in intereseted channels
"""

import argparse


def main():
    parser = argparse.ArgumentParser(description='Simplify a stimulus into ' 
                                     'a minimal part which could cause equivalent '
                                     'activation as the original stimlus '
                                     'in intereseted channels')
    parser.add_argument('-net',
                        type = str,
                        required = True,
                        metavar='Name of target DNN',
                        choices=['alexnet','vgg11','vgg16','vgg19'],
                        help = 'Name of interested DNN')
   parser.add_argument('-stim',
                        type=str,
                        required=True,
                        metavar='A csv file lists top stimuli to be simplyfied.',
                        help='The file provide path of the top stimuli images '
                        'to be simplified.')
    parser.add_argument('-layer',
                        nargs='+',
                        metavar='Layer id list',
                        type=str,
                        help='Layers of interest. '
                             'conv, relu, pool, fc represents convolution, reLU, '
                             'pooling, and fc layer, respectively.The top stimulis '
                             'are selected for all layers and channels default.')
    parser.add_argument('-channel',
                        nargs='+',
                        metavar='Channel id list',
                        type=str,
                        help='Channel of interest.If no channels are specificied, '
                        'each channel will be processed. The layer and channel '
                        'should be one-to-one paired together in the order.')
    parser.add_argument('-dmask',
                        metavar='.dmask.csv dnnmask file',
                        required=False,
                        type=str,
                        help='A .dmask.csv file in which layers and channel of '
                        'interest are listed')
    parser.add_argument('-outdir',
                        type = str,
                        required = True,
                        metavar='Outputdir',
                        help = 'Output directory to save the simplfied image, ' 
                        'and associated act.hd5 activation file.')
    args = parser.parse_args()


if __name__ == '__main__':
    main()
